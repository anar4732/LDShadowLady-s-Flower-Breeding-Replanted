package com.ldshadowlady.acmc.blocks;

import dev.architectury.registry.registries.DeferredRegister;
import dev.architectury.registry.registries.RegistrySupplier;
import net.minecraft.core.registries.Registries;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.FlowerPotBlock;
import net.minecraft.world.level.block.SoundType;
import net.minecraft.world.level.block.VineBlock;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;

import static com.ldshadowlady.acmc.ACMCMod.MODID;

public final class ACMCBlocks {
    public static final DeferredRegister<Block> REG = DeferredRegister.create(MODID, Registries.BLOCK);
	
    //Crop blocks
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_ROSE = REG.register("crop_black_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_ROSE = REG.register("crop_blue_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_ROSE = REG.register("crop_cyan_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_ROSE = REG.register("crop_red_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_ROSE = REG.register("crop_magenta_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_ROSE = REG.register("crop_orange_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_ROSE = REG.register("crop_pink_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_ROSE = REG.register("crop_white_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_ROSE = REG.register("crop_yellow_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_ROSE = REG.register("crop_lilac_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_POPPY = REG.register("crop_black_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_POPPY = REG.register("crop_blue_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_POPPY = REG.register("crop_cyan_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_POPPY = REG.register("crop_red_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_POPPY = REG.register("crop_magenta_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_POPPY = REG.register("crop_orange_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_POPPY = REG.register("crop_pink_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_POPPY = REG.register("crop_white_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_POPPY = REG.register("crop_yellow_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_POPPY = REG.register("crop_lilac_poppy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_DANDELION = REG.register("crop_black_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_DANDELION = REG.register("crop_blue_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_DANDELION = REG.register("crop_cyan_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_DANDELION = REG.register("crop_red_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_DANDELION = REG.register("crop_magenta_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_DANDELION = REG.register("crop_orange_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_DANDELION = REG.register("crop_pink_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_DANDELION = REG.register("crop_white_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_DANDELION = REG.register("crop_yellow_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_DANDELION = REG.register("crop_lilac_dandelion", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_BLACK_ORCHID = REG.register("crop_black_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_BLUE_ORCHID = REG.register("crop_blue_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_CYAN_ORCHID = REG.register("crop_cyan_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_RED_ORCHID = REG.register("crop_red_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_MAGENTA_ORCHID = REG.register("crop_magenta_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_ORANGE_ORCHID = REG.register("crop_orange_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_PINK_ORCHID = REG.register("crop_pink_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_WHITE_ORCHID = REG.register("crop_white_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_YELLOW_ORCHID = REG.register("crop_yellow_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_LILAC_ORCHID = REG.register("crop_lilac_orchid", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_ALLIUM = REG.register("crop_black_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_ALLIUM = REG.register("crop_blue_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_ALLIUM = REG.register("crop_cyan_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_ALLIUM = REG.register("crop_red_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_ALLIUM = REG.register("crop_magenta_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_ALLIUM = REG.register("crop_orange_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_ALLIUM = REG.register("crop_pink_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_ALLIUM = REG.register("crop_white_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_ALLIUM = REG.register("crop_yellow_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_ALLIUM = REG.register("crop_lilac_allium", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_AZURE_BLUET = REG.register("crop_black_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_AZURE_BLUET = REG.register("crop_blue_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_AZURE_BLUET = REG.register("crop_cyan_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_AZURE_BLUET = REG.register("crop_red_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_AZURE_BLUET = REG.register("crop_magenta_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_AZURE_BLUET = REG.register("crop_orange_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_AZURE_BLUET = REG.register("crop_pink_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_AZURE_BLUET = REG.register("crop_white_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_AZURE_BLUET = REG.register("crop_yellow_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_AZURE_BLUET = REG.register("crop_lilac_azure_bluet", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_TULIP = REG.register("crop_black_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_TULIP = REG.register("crop_blue_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_TULIP = REG.register("crop_cyan_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_TULIP = REG.register("crop_red_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_TULIP = REG.register("crop_magenta_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_TULIP = REG.register("crop_orange_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_TULIP = REG.register("crop_pink_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_TULIP = REG.register("crop_white_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_TULIP = REG.register("crop_yellow_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_TULIP = REG.register("crop_lilac_tulip", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_DAISY = REG.register("crop_black_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_DAISY = REG.register("crop_blue_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_DAISY = REG.register("crop_cyan_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_DAISY = REG.register("crop_red_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_DAISY = REG.register("crop_magenta_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_DAISY = REG.register("crop_orange_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_DAISY = REG.register("crop_pink_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_DAISY = REG.register("crop_white_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_DAISY = REG.register("crop_yellow_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_DAISY = REG.register("crop_lilac_daisy", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_CORNFLOWER = REG.register("crop_black_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_CORNFLOWER = REG.register("crop_blue_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_CORNFLOWER = REG.register("crop_cyan_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_CORNFLOWER = REG.register("crop_red_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_CORNFLOWER = REG.register("crop_magenta_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_CORNFLOWER = REG.register("crop_orange_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_CORNFLOWER = REG.register("crop_pink_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_CORNFLOWER = REG.register("crop_white_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_CORNFLOWER = REG.register("crop_yellow_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_CORNFLOWER = REG.register("crop_lilac_cornflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_BLACK_LILY = REG.register("crop_black_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_BLUE_LILY = REG.register("crop_blue_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_CYAN_LILY = REG.register("crop_cyan_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_RED_LILY = REG.register("crop_red_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_MAGENTA_LILY = REG.register("crop_magenta_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_ORANGE_LILY = REG.register("crop_orange_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_PINK_LILY = REG.register("crop_pink_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_WHITE_LILY = REG.register("crop_white_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_YELLOW_LILY = REG.register("crop_yellow_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_LILAC_LILY = REG.register("crop_lilac_lily", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_WITHER_ROSE = REG.register("crop_black_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_WITHER_ROSE = REG.register("crop_blue_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_WITHER_ROSE = REG.register("crop_cyan_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_WITHER_ROSE = REG.register("crop_red_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_WITHER_ROSE = REG.register("crop_magenta_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_WITHER_ROSE = REG.register("crop_orange_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_WITHER_ROSE = REG.register("crop_pink_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_WITHER_ROSE = REG.register("crop_white_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_WITHER_ROSE = REG.register("crop_yellow_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_WITHER_ROSE = REG.register("crop_lilac_wither_rose", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_SUNFLOWER = REG.register("crop_black_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_SUNFLOWER = REG.register("crop_blue_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_SUNFLOWER = REG.register("crop_cyan_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_SUNFLOWER = REG.register("crop_red_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_SUNFLOWER = REG.register("crop_magenta_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_SUNFLOWER = REG.register("crop_orange_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_SUNFLOWER = REG.register("crop_pink_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_SUNFLOWER = REG.register("crop_white_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_SUNFLOWER = REG.register("crop_yellow_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_SUNFLOWER = REG.register("crop_lilac_sunflower", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_BLACK_LILAC = REG.register("crop_black_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_BLUE_LILAC = REG.register("crop_blue_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_CYAN_LILAC = REG.register("crop_cyan_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_RED_LILAC = REG.register("crop_red_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_MAGENTA_LILAC = REG.register("crop_magenta_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_ORANGE_LILAC = REG.register("crop_orange_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_PINK_LILAC = REG.register("crop_pink_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_WHITE_LILAC = REG.register("crop_white_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_YELLOW_LILAC = REG.register("crop_yellow_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerVineCrop> CROP_LILAC_LILAC = REG.register("crop_lilac_lilac", () -> new BlockFlowerVineCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLACK_PEONY = REG.register("crop_black_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_BLUE_PEONY = REG.register("crop_blue_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_CYAN_PEONY = REG.register("crop_cyan_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_RED_PEONY = REG.register("crop_red_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_MAGENTA_PEONY = REG.register("crop_magenta_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_ORANGE_PEONY = REG.register("crop_orange_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_PINK_PEONY = REG.register("crop_pink_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_WHITE_PEONY = REG.register("crop_white_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_YELLOW_PEONY = REG.register("crop_yellow_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCrop> CROP_LILAC_PEONY = REG.register("crop_lilac_peony", () -> new BlockFlowerCrop(BlockBehaviour.Properties.of(Material.DECORATION).randomTicks().noCollission().sound(SoundType.GRASS)));

    //Flower blocks
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_ROSE = REG.register("flower_black_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_ROSE = REG.register("flower_blue_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_ROSE = REG.register("flower_cyan_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_ROSE = REG.register("flower_red_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_ROSE = REG.register("flower_magenta_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_ROSE = REG.register("flower_orange_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_ROSE = REG.register("flower_pink_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_ROSE = REG.register("flower_white_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_ROSE = REG.register("flower_yellow_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_ROSE = REG.register("flower_lilac_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_POPPY = REG.register("flower_black_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_POPPY = REG.register("flower_blue_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_POPPY = REG.register("flower_cyan_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_POPPY = REG.register("flower_red_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_POPPY = REG.register("flower_magenta_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_POPPY = REG.register("flower_orange_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_POPPY = REG.register("flower_pink_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_POPPY = REG.register("flower_white_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_POPPY = REG.register("flower_yellow_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_POPPY = REG.register("flower_lilac_poppy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 10.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_DANDELION = REG.register("flower_black_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_DANDELION = REG.register("flower_blue_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_DANDELION = REG.register("flower_cyan_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_DANDELION = REG.register("flower_red_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_DANDELION = REG.register("flower_magenta_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_DANDELION = REG.register("flower_orange_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_DANDELION = REG.register("flower_pink_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_DANDELION = REG.register("flower_white_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_DANDELION = REG.register("flower_yellow_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_DANDELION = REG.register("flower_lilac_dandelion", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<VineBlock> FLOWER_BLACK_ORCHID = REG.register("flower_black_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_BLUE_ORCHID = REG.register("flower_blue_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_CYAN_ORCHID = REG.register("flower_cyan_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_RED_ORCHID = REG.register("flower_red_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_MAGENTA_ORCHID = REG.register("flower_magenta_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_ORANGE_ORCHID = REG.register("flower_orange_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_PINK_ORCHID = REG.register("flower_pink_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_WHITE_ORCHID = REG.register("flower_white_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_YELLOW_ORCHID = REG.register("flower_yellow_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_LILAC_ORCHID = REG.register("flower_lilac_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_ALLIUM = REG.register("flower_black_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_ALLIUM = REG.register("flower_blue_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_ALLIUM = REG.register("flower_cyan_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_ALLIUM = REG.register("flower_red_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_ALLIUM = REG.register("flower_magenta_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_ALLIUM = REG.register("flower_orange_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_ALLIUM = REG.register("flower_pink_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_ALLIUM = REG.register("flower_white_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_ALLIUM = REG.register("flower_yellow_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_ALLIUM = REG.register("flower_lilac_allium", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 14.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_BLACK_AZURE_BLUET = REG.register("flower_black_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_BLUE_AZURE_BLUET = REG.register("flower_blue_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_CYAN_AZURE_BLUET = REG.register("flower_cyan_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_RED_AZURE_BLUET = REG.register("flower_red_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_MAGENTA_AZURE_BLUET = REG.register("flower_magenta_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_ORANGE_AZURE_BLUET = REG.register("flower_orange_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_PINK_AZURE_BLUET = REG.register("flower_pink_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_WHITE_AZURE_BLUET = REG.register("flower_white_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_YELLOW_AZURE_BLUET = REG.register("flower_yellow_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlowerCarpet> FLOWER_LILAC_AZURE_BLUET = REG.register("flower_lilac_azure_bluet", () -> new BlockFlowerCarpet(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_TULIP = REG.register("flower_black_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_TULIP = REG.register("flower_blue_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_TULIP = REG.register("flower_cyan_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_TULIP = REG.register("flower_red_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_TULIP = REG.register("flower_magenta_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_TULIP = REG.register("flower_orange_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_TULIP = REG.register("flower_pink_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_TULIP = REG.register("flower_white_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_TULIP = REG.register("flower_yellow_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_TULIP = REG.register("flower_lilac_tulip", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(2.0D, 0.0D, 2.0D, 14.0D, 10.0D, 14.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_DAISY = REG.register("flower_black_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_DAISY = REG.register("flower_blue_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_DAISY = REG.register("flower_cyan_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_DAISY = REG.register("flower_red_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_DAISY = REG.register("flower_magenta_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_DAISY = REG.register("flower_orange_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_DAISY = REG.register("flower_pink_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_DAISY = REG.register("flower_white_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_DAISY = REG.register("flower_yellow_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_DAISY = REG.register("flower_lilac_daisy", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 9.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_CORNFLOWER = REG.register("flower_black_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_CORNFLOWER = REG.register("flower_blue_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_CORNFLOWER = REG.register("flower_cyan_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_CORNFLOWER = REG.register("flower_red_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_CORNFLOWER = REG.register("flower_magenta_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_CORNFLOWER = REG.register("flower_orange_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_CORNFLOWER = REG.register("flower_pink_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_CORNFLOWER = REG.register("flower_white_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_CORNFLOWER = REG.register("flower_yellow_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_CORNFLOWER = REG.register("flower_lilac_cornflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 5.0D, 13.0D)));
    public static final RegistrySupplier<VineBlock> FLOWER_BLACK_LILY = REG.register("flower_black_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_BLUE_LILY = REG.register("flower_blue_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_CYAN_LILY = REG.register("flower_cyan_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_RED_LILY = REG.register("flower_red_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_MAGENTA_LILY = REG.register("flower_magenta_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_ORANGE_LILY = REG.register("flower_orange_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_PINK_LILY = REG.register("flower_pink_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_WHITE_LILY = REG.register("flower_white_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_YELLOW_LILY = REG.register("flower_yellow_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_LILAC_LILY = REG.register("flower_lilac_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_WITHER_ROSE = REG.register("flower_black_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_WITHER_ROSE = REG.register("flower_blue_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_WITHER_ROSE = REG.register("flower_cyan_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_WITHER_ROSE = REG.register("flower_red_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_WITHER_ROSE = REG.register("flower_magenta_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_WITHER_ROSE = REG.register("flower_orange_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_WITHER_ROSE = REG.register("flower_pink_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_WITHER_ROSE = REG.register("flower_white_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_WITHER_ROSE = REG.register("flower_yellow_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_WITHER_ROSE = REG.register("flower_lilac_wither_rose", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 13.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_SUNFLOWER = REG.register("flower_black_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_SUNFLOWER = REG.register("flower_blue_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_SUNFLOWER = REG.register("flower_cyan_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_SUNFLOWER = REG.register("flower_red_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_SUNFLOWER = REG.register("flower_magenta_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_SUNFLOWER = REG.register("flower_orange_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_SUNFLOWER = REG.register("flower_pink_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_SUNFLOWER = REG.register("flower_white_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_SUNFLOWER = REG.register("flower_yellow_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_SUNFLOWER = REG.register("flower_lilac_sunflower", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D)));
    public static final RegistrySupplier<VineBlock> FLOWER_BLACK_LILAC = REG.register("flower_black_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_BLUE_LILAC = REG.register("flower_blue_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_CYAN_LILAC = REG.register("flower_cyan_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_RED_LILAC = REG.register("flower_red_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_MAGENTA_LILAC = REG.register("flower_magenta_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_ORANGE_LILAC = REG.register("flower_orange_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_PINK_LILAC = REG.register("flower_pink_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_WHITE_LILAC = REG.register("flower_white_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_YELLOW_LILAC = REG.register("flower_yellow_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> FLOWER_LILAC_LILAC = REG.register("flower_lilac_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().randomTicks().sound(SoundType.GRASS)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLACK_PEONY = REG.register("flower_black_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_BLUE_PEONY = REG.register("flower_blue_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_CYAN_PEONY = REG.register("flower_cyan_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_RED_PEONY = REG.register("flower_red_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_MAGENTA_PEONY = REG.register("flower_magenta_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_ORANGE_PEONY = REG.register("flower_orange_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_PINK_PEONY = REG.register("flower_pink_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_WHITE_PEONY = REG.register("flower_white_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_YELLOW_PEONY = REG.register("flower_yellow_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));
    public static final RegistrySupplier<BlockFlower> FLOWER_LILAC_PEONY = REG.register("flower_lilac_peony", () -> new BlockFlower(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS),Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D)));

    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLACK_WITHER_ROSE = REG.register("flower_pot_black_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLACK_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLACK_DANDELION = REG.register("flower_pot_black_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLACK_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLACK_ALLIUM = REG.register("flower_pot_black_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLACK_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLACK_TULIP = REG.register("flower_pot_black_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLACK_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLACK_DAISY = REG.register("flower_pot_black_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLACK_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLUE_WITHER_ROSE = REG.register("flower_pot_blue_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLUE_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLUE_DANDELION = REG.register("flower_pot_blue_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLUE_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLUE_ALLIUM = REG.register("flower_pot_blue_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLUE_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLUE_TULIP = REG.register("flower_pot_blue_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLUE_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_BLUE_DAISY = REG.register("flower_pot_blue_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_BLUE_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_CYAN_WITHER_ROSE = REG.register("flower_pot_cyan_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_CYAN_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_CYAN_DANDELION = REG.register("flower_pot_cyan_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_CYAN_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_CYAN_ALLIUM = REG.register("flower_pot_cyan_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_CYAN_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_CYAN_TULIP = REG.register("flower_pot_cyan_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_CYAN_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_CYAN_DAISY = REG.register("flower_pot_cyan_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_CYAN_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_RED_WITHER_ROSE = REG.register("flower_pot_red_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_RED_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_RED_DANDELION = REG.register("flower_pot_red_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_RED_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_RED_ALLIUM = REG.register("flower_pot_red_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_RED_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_RED_TULIP = REG.register("flower_pot_red_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_RED_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_RED_DAISY = REG.register("flower_pot_red_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_RED_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_ORANGE_WITHER_ROSE = REG.register("flower_pot_orange_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_ORANGE_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_ORANGE_DANDELION = REG.register("flower_pot_orange_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_ORANGE_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_ORANGE_ALLIUM = REG.register("flower_pot_orange_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_ORANGE_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_ORANGE_TULIP = REG.register("flower_pot_orange_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_ORANGE_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_ORANGE_DAISY = REG.register("flower_pot_orange_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_ORANGE_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_MAGENTA_WITHER_ROSE = REG.register("flower_pot_magenta_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_MAGENTA_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_MAGENTA_DANDELION = REG.register("flower_pot_magenta_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_MAGENTA_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_MAGENTA_ALLIUM = REG.register("flower_pot_magenta_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_MAGENTA_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_MAGENTA_TULIP = REG.register("flower_pot_magenta_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_MAGENTA_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_MAGENTA_DAISY = REG.register("flower_pot_magenta_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_MAGENTA_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_YELLOW_WITHER_ROSE = REG.register("flower_pot_yellow_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_YELLOW_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_YELLOW_DANDELION = REG.register("flower_pot_yellow_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_YELLOW_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_YELLOW_ALLIUM = REG.register("flower_pot_yellow_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_YELLOW_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_YELLOW_TULIP = REG.register("flower_pot_yellow_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_YELLOW_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_YELLOW_DAISY = REG.register("flower_pot_yellow_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_YELLOW_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_WHITE_WITHER_ROSE = REG.register("flower_pot_white_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_WHITE_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_WHITE_DANDELION = REG.register("flower_pot_white_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_WHITE_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_WHITE_ALLIUM = REG.register("flower_pot_white_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_WHITE_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_WHITE_TULIP = REG.register("flower_pot_white_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_WHITE_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_WHITE_DAISY = REG.register("flower_pot_white_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_WHITE_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_PINK_WITHER_ROSE = REG.register("flower_pot_pink_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_PINK_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_PINK_DANDELION = REG.register("flower_pot_pink_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_PINK_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_PINK_ALLIUM = REG.register("flower_pot_pink_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_PINK_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_PINK_TULIP = REG.register("flower_pot_pink_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_PINK_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_PINK_DAISY = REG.register("flower_pot_pink_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_PINK_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_LILAC_WITHER_ROSE = REG.register("flower_pot_lilac_wither_rose", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_LILAC_WITHER_ROSE.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_LILAC_DANDELION = REG.register("flower_pot_lilac_dandelion", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_LILAC_DANDELION.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_LILAC_ALLIUM = REG.register("flower_pot_lilac_allium", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_LILAC_ALLIUM.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_LILAC_TULIP = REG.register("flower_pot_lilac_tulip", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_LILAC_TULIP.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
    public static final RegistrySupplier<FlowerPotBlock> FLOWER_POT_LILAC_DAISY = REG.register("flower_pot_lilac_daisy", () -> new FlowerPotBlock(ACMCBlocks.FLOWER_LILAC_DAISY.get(), BlockBehaviour.Properties.of(Material.DECORATION)));
	
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_BLACK_LILY = REG.register("stunted_flower_black_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_BLUE_LILY = REG.register("stunted_flower_blue_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_CYAN_LILY = REG.register("stunted_flower_cyan_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_RED_LILY = REG.register("stunted_flower_red_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_MAGENTA_LILY = REG.register("stunted_flower_magenta_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_ORANGE_LILY = REG.register("stunted_flower_orange_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_PINK_LILY = REG.register("stunted_flower_pink_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_WHITE_LILY = REG.register("stunted_flower_white_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_YELLOW_LILY = REG.register("stunted_flower_yellow_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_LILAC_LILY = REG.register("stunted_flower_lilac_lily", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_BLACK_LILAC = REG.register("stunted_flower_black_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_BLUE_LILAC = REG.register("stunted_flower_blue_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_CYAN_LILAC = REG.register("stunted_flower_cyan_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_RED_LILAC = REG.register("stunted_flower_red_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_MAGENTA_LILAC = REG.register("stunted_flower_magenta_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_ORANGE_LILAC = REG.register("stunted_flower_orange_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_PINK_LILAC = REG.register("stunted_flower_pink_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_WHITE_LILAC = REG.register("stunted_flower_white_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_YELLOW_LILAC = REG.register("stunted_flower_yellow_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_LILAC_LILAC = REG.register("stunted_flower_lilac_lilac", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_BLACK_ORCHID = REG.register("stunted_flower_black_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_BLUE_ORCHID = REG.register("stunted_flower_blue_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_CYAN_ORCHID = REG.register("stunted_flower_cyan_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_RED_ORCHID = REG.register("stunted_flower_red_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_MAGENTA_ORCHID = REG.register("stunted_flower_magenta_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_ORANGE_ORCHID = REG.register("stunted_flower_orange_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_PINK_ORCHID = REG.register("stunted_flower_pink_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_WHITE_ORCHID = REG.register("stunted_flower_white_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_YELLOW_ORCHID = REG.register("stunted_flower_yellow_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
    public static final RegistrySupplier<VineBlock> STUNTED_FLOWER_LILAC_ORCHID = REG.register("stunted_flower_lilac_orchid", () -> new VineBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().sound(SoundType.GRASS)));
}